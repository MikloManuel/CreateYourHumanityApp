{
  "name": "createyourhumanity",
  "version": "0.0.1-SNAPSHOT",
  "private": true,
  "description": "Description for Createyourhumanity",
  "license": "UNLICENSED",
  "scripts": {
    "app:start": "./mvnw -DskipTests",
    "app:up": "docker compose -f src/main/docker/app.yml up --wait",
    "backend:build-cache": "./mvnw dependency:go-offline -ntp",
    "backend:debug": "./mvnw -Dspring-boot.run.jvmArguments=\"-agentlib:jdwp=transport=dt_socket,server=y,suspend=n,address=127.0.0.1:7000\"",
    "backend:doc:test": "./mvnw -ntp javadoc:javadoc --batch-mode",
    "backend:info": "./mvnw --version",
    "backend:nohttp:test": "./mvnw -ntp checkstyle:check --batch-mode",
    "backend:start": "./mvnw -Dskip.installnodenpm -Dskip.npm",
    "backend:unit:test": "./mvnw -ntp -Dskip.installnodenpm -Dskip.npm verify --batch-mode -Dlogging.level.ROOT=OFF -Dlogging.level.tech.jhipster=OFF -Dlogging.level.space.createyourhumanity.app=OFF -Dlogging.level.org.springframework=OFF -Dlogging.level.org.springframework.web=OFF -Dlogging.level.org.springframework.security=OFF",
    "build": "pnpm run webapp:prod --",
    "build-watch": "concurrently 'pnpm run webapp:build:dev -- --watch' pnpm:backend:start",
    "ci:backend:test": "pnpm run backend:info && pnpm run backend:doc:test && pnpm run backend:nohttp:test && pnpm run backend:unit:test -- -P$npm_package_config_default_environment",
    "ci:e2e:package": "pnpm run java:$npm_package_config_packaging:$npm_package_config_default_environment -- -Pe2e -Denforcer.skip=true",
    "ci:e2e:prepare": "pnpm run ci:e2e:prepare:docker",
    "ci:e2e:prepare:docker": "pnpm run services:up --if-present && docker ps -a",
    "ci:e2e:run": "concurrently -k -s first \"pnpm run ci:e2e:server:start\" \"pnpm run e2e:headless\"",
    "preci:e2e:server:start": "pnpm run services:db:await --if-present && pnpm run services:others:await --if-present",
    "ci:e2e:server:start": "java -jar target/e2e.$npm_package_config_packaging --spring.profiles.active=e2e,$npm_package_config_default_environment -Dlogging.level.ROOT=OFF -Dlogging.level.tech.jhipster=OFF -Dlogging.level.space.createyourhumanity.app=OFF -Dlogging.level.org.springframework=OFF -Dlogging.level.org.springframework.web=OFF -Dlogging.level.org.springframework.security=OFF --logging.level.org.springframework.web=ERROR",
    "ci:e2e:teardown": "pnpm run ci:e2e:teardown:docker --if-present",
    "ci:e2e:teardown:docker": "docker compose -f src/main/docker/services.yml down -v && docker ps -a",
    "ci:frontend:build": "pnpm run webapp:build:$npm_package_config_default_environment",
    "ci:frontend:test": "pnpm run ci:frontend:build && pnpm test",
    "ci:server:await": "echo \"Waiting for server at port $npm_package_config_backend_port to start\" && wait-on -t 180000 http-get://127.0.0.1:$npm_package_config_backend_port/management/health && echo \"Server at port $npm_package_config_backend_port started\"",
    "clean-coverage": "rimraf .nyc_output coverage",
    "clean-www": "rimraf target/classes/static/",
    "cleanup": "rimraf target/",
    "cypress": "cypress open --e2e",
    "cypress:audits": "cypress open --e2e --config-file cypress-audits.config.js",
    "docker:db:down": "docker compose -f src/main/docker/mongodb.yml down -v",
    "docker:db:up": "docker compose -f src/main/docker/mongodb.yml up --wait",
    "docker:elasticsearch:down": "docker compose -f src/main/docker/elasticsearch.yml down -v",
    "docker:elasticsearch:up": "docker compose -f src/main/docker/elasticsearch.yml up --wait",
    "docker:keycloak:down": "docker compose -f src/main/docker/keycloak.yml down -v",
    "docker:keycloak:up": "docker compose -f src/main/docker/keycloak.yml up --wait",
    "e2e": "pnpm run e2e:cypress:headed --",
    "e2e:cypress": "cypress run --e2e --browser chrome",
    "e2e:cypress:audits": "cypress run --e2e --browser chrome --config-file cypress-audits.config.js",
    "e2e:cypress:audits:headless": "pnpm run e2e:cypress -- --config-file cypress-audits.config.js",
    "pree2e:cypress:coverage": "pnpm run clean-coverage && pnpm run ci:server:await",
    "e2e:cypress:coverage": "pnpm run e2e:cypress:headed",
    "poste2e:cypress:coverage": "nyc report",
    "e2e:cypress:headed": "pnpm run e2e:cypress -- --headed",
    "e2e:cypress:record": "pnpm run e2e:cypress -- --record",
    "e2e:dev": "concurrently -k -s first \"./mvnw\" \"pnpm run e2e\"",
    "e2e:devserver": "concurrently -k -s first \"pnpm run backend:start\" \"pnpm start\" \"wait-on -t 180000 http-get://127.0.0.1:9000 && pnpm run e2e:headless -- -c baseUrl=http://localhost:9000\"",
    "pree2e:headless": "pnpm run ci:server:await",
    "e2e:headless": "pnpm run e2e:cypress --",
    "java:docker": "./mvnw -ntp verify -DskipTests -Pprod jib:dockerBuild",
    "java:docker:arm64": "pnpm run java:docker -- -Djib-maven-plugin.architecture=arm64",
    "java:docker:dev": "pnpm run java:docker -- -Pdev,webapp",
    "java:docker:prod": "pnpm run java:docker -- -Pprod",
    "java:jar": "./mvnw -ntp verify -DskipTests --batch-mode",
    "java:jar:dev": "pnpm run java:jar -- -Pdev,webapp",
    "java:jar:prod": "pnpm run java:jar -- -Pprod",
    "java:war": "./mvnw -ntp verify -DskipTests --batch-mode -Pwar",
    "java:war:dev": "pnpm run java:war -- -Pdev,webapp",
    "java:war:prod": "pnpm run java:war -- -Pprod",
    "jest": "jest --coverage --logHeapUsage --maxWorkers=2 --config jest.conf.js",
    "lint": "eslint . --ext .js,.ts",
    "lint:fix": "pnpm run lint -- --fix",
    "prepare": "husky",
    "prettier:check": "prettier --check \"{,src/**/,webpack/,.blueprint/**/}*.{md,json,yml,html,cjs,mjs,js,ts,tsx,css,scss,java}\"",
    "prettier:format": "prettier --write \"{,src/**/,webpack/,.blueprint/**/}*.{md,json,yml,html,cjs,mjs,js,ts,tsx,css,scss,java}\"",
    "serve": "pnpm run start --",
    "services:up": "docker compose -f src/main/docker/services.yml up --wait",
    "start": "ng serve --hmr",
    "start-tls": "pnpm run webapp:dev-ssl",
    "pretest": "pnpm run lint",
    "test": "ng test --coverage --log-heap-usage -w=2",
    "test:watch": "pnpm run test -- --watch",
    "watch": "concurrently pnpm:start pnpm:backend:start",
    "webapp:build": "pnpm run clean-www && pnpm run webapp:build:dev",
    "webapp:build:dev": "ng build --configuration development",
    "webapp:build:prod": "ng build --configuration production",
    "webapp:dev": "ng serve",
    "webapp:dev-ssl": "ng serve --ssl",
    "webapp:dev-verbose": "ng serve --verbose",
    "prewebapp:instrumenter": "pnpm run clean-www && pnpm run clean-coverage",
    "webapp:instrumenter": "ng build --configuration instrumenter",
    "webapp:prod": "pnpm run clean-www && pnpm run webapp:build:prod",
    "webapp:test": "pnpm run test --"
  },
  "config": {
    "backend_port": 8080,
    "default_environment": "prod",
    "packaging": "jar"
  },
  "dependencies": {
    "@angular-architects/module-federation": "18.0.6",
    "@angular/animations": "18.2.12",
    "@angular/cdk": "18.2.12",
    "@angular/common": "18.2.12",
    "@angular/compiler": "18.2.12",
    "@angular/core": "18.2.12",
    "@angular/forms": "18.2.12",
    "@angular/localize": "18.2.12",
    "@angular/material": "18.2.12",
    "@angular/platform-browser": "18.2.12",
    "@angular/platform-browser-dynamic": "18.2.12",
    "@angular/router": "18.2.12",
    "@fortawesome/angular-fontawesome": "0.15.0",
    "@fortawesome/fontawesome-svg-core": "6.5.2",
    "@fortawesome/free-brands-svg-icons": "^6.7.2",
    "@fortawesome/free-regular-svg-icons": "^6.7.2",
    "@fortawesome/free-solid-svg-icons": "6.5.2",
    "@jest/globals": "^29.7.0",
    "@ng-bootstrap/ng-bootstrap": "17.0.0",
    "@ngx-formly/bootstrap": "^6.3.12",
    "@ngx-formly/core": "^6.3.12",
    "@ngx-translate/core": "15.0.0",
    "@ngx-translate/http-loader": "8.0.0",
    "@patternfly/react-core": "6.1.0",
    "@patternfly/react-icons": "6.1.0",
    "@popperjs/core": "2.11.8",
    "bootstrap": "5.3.3",
    "dayjs": "1.11.11",
    "ngx-infinite-scroll": "18.0.0",
    "ngx-quill": "^26.0.10",
    "primeicons": "^7.0.0",
    "primeng": "18.0.1",
    "quill": "^2.0.3",
    "react": "^19.0.0",
    "react-dom": "^19.0.0",
    "rxjs": "7.8.1",
    "sockjs-client": "1.6.1",
    "tslib": "2.6.3",
    "uuid": "^10.0.0",
    "webstomp-client": "^1.2.6",
    "zone.js": "0.15.0"
  },
  "devDependencies": {
    "@angular-builders/custom-webpack": "18.0.0",
    "@angular-builders/jest": "18.0.0",
    "@angular-devkit/build-angular": "18.2.12",
    "@angular-eslint/eslint-plugin": "18.4.4-alpha.0",
    "@angular/cli": "18.2.12",
    "@angular/compiler-cli": "18.2.12",
    "@angular/service-worker": "18.2.12",
    "@cypress/code-coverage": "3.12.39",
    "@stomp/rx-stomp": "^2.0.0",
    "@stomp/stompjs": "^7.0.0",
    "@types/jasmine": "^5.1.5",
    "@types/jest": "29.5.12",
    "@types/node": "20.11.25",
    "@types/react": "19.0.0",
    "@types/react-dom": "19.0.0",
    "@types/sockjs-client": "1.5.4",
    "@typescript-eslint/eslint-plugin": "7.13.1",
    "@typescript-eslint/parser": "7.13.1",
    "@typescript-eslint/utils": "^7.18.0",
    "babel-loader": "9.1.3",
    "babel-plugin-istanbul": "6.1.1",
    "browser-sync": "3.0.2",
    "browser-sync-webpack-plugin": "2.3.0",
    "buffer": "6.0.3",
    "concurrently": "8.2.2",
    "copy-webpack-plugin": "12.0.2",
    "cypress": "13.12.0",
    "cypress-audit": "1.1.0",
    "eslint": "8.57.0",
    "eslint-config-prettier": "9.1.0",
    "eslint-plugin-cypress": "3.3.0",
    "eslint-webpack-plugin": "4.2.0",
    "folder-hash": "4.0.4",
    "generator-jhipster": "8.6.0",
    "husky": "9.0.11",
    "jest": "29.7.0",
    "jest-date-mock": "1.0.10",
    "jest-environment-jsdom": "29.7.0",
    "jest-junit": "16.0.0",
    "jest-preset-angular": "14.1.1",
    "jest-sonar": "0.2.16",
    "lighthouse": "12.1.0",
    "lint-staged": "15.2.7",
    "merge-jsons-webpack-plugin": "2.0.1",
    "nyc": "17.0.0",
    "prettier": "3.3.2",
    "prettier-plugin-java": "2.6.0",
    "prettier-plugin-packagejson": "2.5.0",
    "rimraf": "5.0.7",
    "swagger-ui-dist": "5.17.14",
    "ts-jest": "29.1.5",
    "typescript": "5.4.3",
    "wait-on": "7.2.0",
    "webpack": "5.92.1",
    "webpack-bundle-analyzer": "4.10.2",
    "webpack-merge": "5.10.0",
    "webpack-notifier": "1.15.0"
  },
  "packageManager": "pnpm@8.11.0",
  "engines": {
    "node": ">=20.15.0"
  },
  "cacheDirectories": [
    "node_modules"
  ],
  "overrides": {
    "browser-sync": "3.0.2",
    "webpack": "5.92.1"
  }
}
