package space.createyourhumanity.app.domain;

import static org.assertj.core.api.Assertions.assertThat;
import static space.createyourhumanity.app.domain.AssertUtils.zonedDataTimeSameInstant;

public class FriendsAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFriendsAllPropertiesEquals(Friends expected, Friends actual) {
        assertFriendsAutoGeneratedPropertiesEquals(expected, actual);
        assertFriendsAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFriendsAllUpdatablePropertiesEquals(Friends expected, Friends actual) {
        assertFriendsUpdatableFieldsEquals(expected, actual);
        assertFriendsUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFriendsAutoGeneratedPropertiesEquals(Friends expected, Friends actual) {
        assertThat(expected)
            .as("Verify Friends auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFriendsUpdatableFieldsEquals(Friends expected, Friends actual) {
        assertThat(expected)
            .as("Verify Friends relevant properties")
            .satisfies(
                e ->
                    assertThat(e.getConnectDate())
                        .as("check connectDate")
                        .usingComparator(zonedDataTimeSameInstant)
                        .isEqualTo(actual.getConnectDate())
            )
            .satisfies(e -> assertThat(e.getFriendId()).as("check friendId").isEqualTo(actual.getFriendId()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFriendsUpdatableRelationshipsEquals(Friends expected, Friends actual) {}
}
