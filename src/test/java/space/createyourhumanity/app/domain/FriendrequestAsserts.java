package space.createyourhumanity.app.domain;

import static org.assertj.core.api.Assertions.assertThat;
import static space.createyourhumanity.app.domain.AssertUtils.zonedDataTimeSameInstant;

public class FriendrequestAsserts {

    /**
     * Asserts that the entity has all properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFriendrequestAllPropertiesEquals(Friendrequest expected, Friendrequest actual) {
        assertFriendrequestAutoGeneratedPropertiesEquals(expected, actual);
        assertFriendrequestAllUpdatablePropertiesEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all updatable properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFriendrequestAllUpdatablePropertiesEquals(Friendrequest expected, Friendrequest actual) {
        assertFriendrequestUpdatableFieldsEquals(expected, actual);
        assertFriendrequestUpdatableRelationshipsEquals(expected, actual);
    }

    /**
     * Asserts that the entity has all the auto generated properties (fields/relationships) set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFriendrequestAutoGeneratedPropertiesEquals(Friendrequest expected, Friendrequest actual) {
        assertThat(expected)
            .as("Verify Friendrequest auto generated properties")
            .satisfies(e -> assertThat(e.getId()).as("check id").isEqualTo(actual.getId()));
    }

    /**
     * Asserts that the entity has all the updatable fields set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFriendrequestUpdatableFieldsEquals(Friendrequest expected, Friendrequest actual) {
        assertThat(expected)
            .as("Verify Friendrequest relevant properties")
            .satisfies(
                e ->
                    assertThat(e.getRequestDate())
                        .as("check requestDate")
                        .usingComparator(zonedDataTimeSameInstant)
                        .isEqualTo(actual.getRequestDate())
            )
            .satisfies(e -> assertThat(e.getRequestUserId()).as("check requestUserId").isEqualTo(actual.getRequestUserId()))
            .satisfies(e -> assertThat(e.getInfo()).as("check info").isEqualTo(actual.getInfo()));
    }

    /**
     * Asserts that the entity has all the updatable relationships set.
     *
     * @param expected the expected entity
     * @param actual the actual entity
     */
    public static void assertFriendrequestUpdatableRelationshipsEquals(Friendrequest expected, Friendrequest actual) {}
}
